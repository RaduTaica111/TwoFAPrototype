"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactNative = require("react-native");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var styles = _reactNative.StyleSheet.create({
  triangle: {
    borderTopColor: 'transparent',
    borderRightColor: 'transparent',
    borderLeftColor: 'transparent',
    borderTopWidth: 0
  }
});

var Triangle = function Triangle(_ref) {
  var width = _ref.width,
      height = _ref.height,
      color = _ref.color,
      extraProps = _objectWithoutProperties(_ref, ["width", "height", "color"]);

  return /*#__PURE__*/_react["default"].createElement(_reactNative.View, _extends({}, extraProps, {
    style: [styles.triangle, {
      width: width,
      height: height,
      borderRightWidth: width * 0.5,
      borderBottomWidth: height,
      borderLeftWidth: width * 0.5,
      borderColor: color
    }]
  }));
};

Triangle.propTypes = {
  width: _propTypes["default"].number,
  height: _propTypes["default"].number,
  color: _propTypes["default"].string
};
Triangle.defaultProps = {
  width: 100,
  height: 100,
  color: "red"
};

var _default = /*#__PURE__*/_react["default"].memo(Triangle);

exports["default"] = _default;